# Docker Auto Update System - Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docker-auto-postgres
    environment:
      POSTGRES_DB: dockerauto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: Asia/Shanghai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - docker-auto-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dockerauto"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: docker-auto-backend
    environment:
      # Application
      - APP_PORT=8080
      - APP_ENV=development
      - LOG_LEVEL=debug
      - LOG_FORMAT=json

      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=dockerauto
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - DB_DEBUG=true

      # JWT
      - JWT_SECRET=development-jwt-secret-key-do-not-use-in-production
      - JWT_EXPIRE_HOURS=24
      - JWT_REFRESH_DAYS=7

      # Docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_API_VERSION=1.41
      - DOCKER_TIMEOUT=30

      # Development
      - DEBUG_MODE=true
      - API_DOCS_ENABLED=true
      - HOT_RELOAD=true

      # CORS (allow frontend access)
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

      # Timezone
      - TZ=Asia/Shanghai
    volumes:
      # Mount Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount source code for hot reload
      - ./backend:/app
      # Mount logs directory
      - ./logs:/app/logs
    ports:
      - "8080:8080"
    networks:
      - docker-auto-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: docker-auto-frontend
    environment:
      # API Configuration
      - VUE_APP_API_BASE_URL=http://localhost:8080/api/v1
      - VUE_APP_WS_URL=ws://localhost:8080/ws
      - VUE_APP_TITLE=Docker Auto Update System
      - VUE_APP_VERSION=1.0.0-dev

      # Development
      - NODE_ENV=development
      - VITE_DEV_SERVER_HOST=0.0.0.0
      - VITE_DEV_SERVER_PORT=3000

      # Timezone
      - TZ=Asia/Shanghai
    volumes:
      # Mount source code for hot reload
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - docker-auto-network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Nginx Reverse Proxy (Optional for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: docker-auto-nginx
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
    networks:
      - docker-auto-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - nginx  # Only start with --profile nginx

  # pgAdmin (Optional database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: docker-auto-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@docker-auto.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      TZ: Asia/Shanghai
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - docker-auto-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - tools  # Only start with --profile tools

networks:
  docker-auto-network:
    driver: bridge
    name: docker-auto-network

volumes:
  postgres_data:
    driver: local
    name: docker-auto-postgres-data
  pgadmin_data:
    driver: local
    name: docker-auto-pgadmin-data