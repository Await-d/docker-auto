# Docker Auto Update System - Production Ready v2.2.0
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docker-auto-postgres
    environment:
      POSTGRES_DB: dockerauto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: Asia/Shanghai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - docker-auto-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dockerauto"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Unified Docker Auto Service
  docker-auto:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: docker-auto-system
    environment:
      # Application
      - APP_PORT=8080
      - APP_ENV=development
      - LOG_LEVEL=debug
      - LOG_FORMAT=json

      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=dockerauto
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - DB_DEBUG=true

      # JWT
      - JWT_SECRET=development-jwt-secret-key-do-not-use-in-production
      - JWT_EXPIRE_HOURS=24
      - JWT_REFRESH_DAYS=7

      # Docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_API_VERSION=1.41
      - DOCKER_TIMEOUT=30

      # Timezone
      - TZ=Asia/Shanghai
    volumes:
      # Mount Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount logs directory
      - ./logs:/app/logs
    ports:
      - "80:80"
    networks:
      - docker-auto-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health", "&&", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin (Optional database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: docker-auto-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@docker-auto.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      TZ: Asia/Shanghai
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - docker-auto-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - tools  # Only start with --profile tools

networks:
  docker-auto-network:
    driver: bridge
    name: docker-auto-network

volumes:
  postgres_data:
    driver: local
    name: docker-auto-postgres-data
  pgadmin_data:
    driver: local
    name: docker-auto-pgadmin-data